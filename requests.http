# ===================================================================
# ARQUIVO DE TESTES DA API - PROJETO BOMBEIROS
# Para executar, clique em "Send Request" acima de cada bloco ###
# ===================================================================

# --- VARIÁVEIS GLOBAIS ---
# Define o endereço base da API
@hostname = http://localhost:3000

# Tokens que serão obtidos durante os testes
@adminToken = 
@analistaToken = 

# ID de um usuário que será obtido durante os testes
@userId = 


# ===================================================================
# 1. TESTES DE CADASTRO (/api/auth/register)
# ===================================================================

### 1.1 - Cadastrar um novo usuário ANALISTA com sucesso
POST {{hostname}}/api/auth/register
Content-Type: application/json

{
  "name": "Soldado Carlos",
  "email": "carlos.soldado@bombeiros.com",
  "password": "senhaValida123",
  "profile": "ANALISTA"
}

### 1.2 - Cadastrar um novo usuário ADMIN com sucesso
POST {{hostname}}/api/auth/register
Content-Type: application/json

{
  "name": "Major Ana Silva",
  "email": "ana.major@bombeiros.com",
  "password": "senhaSuperSecreta123",
  "profile": "ADMIN"
}

### 1.3 - Tentar cadastrar um usuário com email que já existe
# Resultado esperado: Erro 400 Bad Request
POST {{hostname}}/api/auth/register
Content-Type: application/json

{
  "name": "Major Ana Silva",
  "email": "ana.major@bombeiros.com",
  "password": "outraSenha123",
  "profile": "ADMIN"
}

### 1.4 - Tentar cadastrar com dados inválidos (senha curta)
# Resultado esperado: Erro 400 Bad Request com detalhes do Zod
POST {{hostname}}/api/auth/register
Content-Type: application/json

{
  "name": "Usuario Invalido",
  "email": "invalido@email.com",
  "password": "123",
  "profile": "ANALISTA"
}


# ===================================================================
# 2. TESTES DE AUTENTICAÇÃO (/api/auth/login)
# ===================================================================

### 2.1 - Fazer login com usuário ADMIN
# AÇÃO: Após rodar, copie o token da resposta e cole na variável @adminToken no topo do arquivo.
POST {{hostname}}/api/auth/login
Content-Type: application/json

{
  "email": "ana.major@bombeiros.com",
  "password": "senhaSuperSecreta123"
}

### 2.2 - Fazer login com usuário ANALISTA
# AÇÃO: Após rodar, copie o token da resposta e cole na variável @analistaToken no topo do arquivo.
POST {{hostname}}/api/auth/login
Content-Type: application/json

{
  "email": "carlos.soldado@bombeiros.com",
  "password": "senhaValida123"
}

### 2.3 - Tentar fazer login com senha errada
# Resultado esperado: Erro 401 Unauthorized
POST {{hostname}}/api/auth/login
Content-Type: application/json

{
  "email": "ana.major@bombeiros.com",
  "password": "senha-errada"
}


# ===================================================================
# 3. TESTES DE GESTÃO DE USUÁRIOS (/api/users)
# TODAS as requisições abaixo precisam do token de ADMIN
# ===================================================================

### 3.1 - Listar todos os usuários
# AÇÃO: Primeiro, execute o login do ADMIN (2.1) e cole o token na variável @adminToken
# Resultado esperado: 200 OK com a lista de usuários
GET {{hostname}}/api/users
Authorization: Bearer {{adminToken}}

### 3.2 - Obter detalhes de um usuário específico
# AÇÃO: Primeiro, execute a listagem (3.1), copie o ID de um usuário (ex: do "Soldado Carlos") 
# e cole na variável @userId no topo do arquivo.
# Resultado esperado: 200 OK com os dados do usuário "Soldado Carlos"
GET {{hostname}}/api/users/{{userId}}
Authorization: Bearer {{adminToken}}

### 3.3 - Atualizar um usuário
# Resultado esperado: 200 OK com os dados do usuário atualizados
PUT {{hostname}}/api/users/{{userId}}
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "name": "Cabo Carlos Silva",
  "profile": "CHEFE"
}

### 3.4 - Deletar um usuário
# Resultado esperado: 204 No Content (sucesso, sem corpo de resposta)
DELETE {{hostname}}/api/users/{{userId}}
Authorization: Bearer {{adminToken}}


# ===================================================================
# 4. TESTES DE SEGURANÇA (Autorização)
# ===================================================================

### 4.1 - Tentar listar usuários com token de ANALISTA
# AÇÃO: Execute o login do ANALISTA (2.2) e cole o token na variável @analistaToken
# Resultado esperado: Erro 403 Forbidden
GET {{hostname}}/api/users
Authorization: Bearer {{analistaToken}}

### 4.2 - Tentar listar usuários sem token
# Resultado esperado: Erro 401 Unauthorized
GET {{hostname}}/api/users